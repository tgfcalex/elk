input {
    kafka {
        bootstrap_servers => "kafka1:9092, kafka2:9092, kafka3:9092"
        topics => ["lb_core_ngx_r"]
        type => "lb_core_ngx_r"
        codec => json {
           charset => "UTF-8"
        }
    }
}
filter {
    if [type] == "lb_core_ngx_r" {
    grok {
        patterns_dir => "/opt/logstash/conf/patterns"
       match => {
              "message" => "%{TIMESTAMP_ISO8601:local_time} (%{NUMBER:status}|-) ((%{NUMBER:siteid}|-)-(%{WORD:idc_num}|-)-(%{HOSTNAME:Random_value}|-)|-) (%{HOSTNAME:X_system}|-) \[(%{URIHOST:upstream_addr}|-):(%{URIHOST:upstream_cache_status}|-)\] (%{NUMBER:request_time}|-) (%{NUMBER:upstream_response_time}|-) - \"(%{WORD:request_method}|-) (%{WORD:http}|-)\:\/\/(%{HOSTNAME:http_host}|-)\:(%{HOSTNAME:port}|-)(%{URIPATHPARAM:uri}|-) (%{WORD:protocol}|-)\/(%{NUMBER:nul}|-) \/ (?:%{NUMBER:body_bytes_sent}|-)\" \|(%{IPORHOST:client_ip}|-) \| \"(%{GREEDYDATA:user_agent}|-)\" \|"
                          }
}

        if [siteid]{

        mutate {
        remove_field => "tags"
        remove_field => "port"
        remove_field => "prospector"
        remove_field => "beat"
        remove_field => "source"
        remove_field => "offset"
        remove_field => "fields"
        remove_field => "host"
        remove_field => "@version"
        remove_field => "message"
        remove_field => "input"
        convert => ["body_bytes_sent", "float"]
        convert => ["request_time", "float"]
        convert => ["upstream_response_time", "float"]
        add_field => { "uuid" => "%{siteid}-%{idc_num}-%{Random_value}" }
    }
}else{
        mutate {
        remove_field => "tags"
        remove_field => "port"
        remove_field => "prospector"
        remove_field => "beat"
        remove_field => "source"
        remove_field => "offset"
        remove_field => "fields"
        remove_field => "host"
        remove_field => "@version"
        remove_field => "message"
        remove_field => "input"
        convert => ["body_bytes_sent", "float"]
        convert => ["request_time", "float"]
        convert => ["upstream_response_time", "float"]
        add_field => { "uuid" => "-" }
    }

}

#    date {
#        match => ["local__time", "yyyy-MM-dd HH:mm:ss"]
#        target=> "@timestamp"
#}




                }
   }



output {
       if [type] == "lb_core_ngx_r" {
       elasticsearch {
       hosts => ["es01:9200" ,"es02:9200", "es03:9200"]
       index => "logstash-lb_core_ngx_r-%{+YYYY.MM.dd}"
   }
 }
}
